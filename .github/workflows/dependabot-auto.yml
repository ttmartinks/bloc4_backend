name: Dependabot Auto-approve

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  dependabot-validate:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Test backend build
        run: |
          echo "Testing backend build..."
          npm run test
          echo "‚úÖ Build successful"
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Check update type
        id: check-update
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # D√©tecter le type de mise √† jour
          if [[ "$PR_TITLE" =~ (minor|patch) ]]; then
            echo "safe_update=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Safe update detected: $PR_TITLE"
          else
            echo "safe_update=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Major update detected: $PR_TITLE"
          fi

      - name: Create Dependabot issue
        run: |
          PACKAGE_NAME=$(echo "${{ github.event.pull_request.title }}" | grep -oP 'bump \K[^\s]+')
          ISSUE_TITLE="üì¶ Mise √† jour Dependabot: $PACKAGE_NAME"
          ISSUE_BODY="## ü§ñ Mise √† jour automatique Dependabot
          
          **Package concern√©:** \`$PACKAGE_NAME\`
          **Pull Request:** #${{ github.event.pull_request.number }}
          **Cr√©√©e automatiquement par:** Dependabot
          
          ### üîó Liens utiles:
          - [Pull Request](${{ github.event.pull_request.html_url }})
          - [D√©tails Dependabot](${{ github.event.pull_request.html_url }}/files)
          
          **‚ö†Ô∏è Cette issue sera ferm√©e automatiquement quand la PR sera merg√©e.**"
          
          gh issue create \
            --title "$ISSUE_TITLE" \
            --body "$ISSUE_BODY" \
            --label "dependabot" \
            --milestone "dependabot" \
            --assignee "ttmartinks"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

      - name: Auto-approve safe updates
        if: steps.check-update.outputs.safe_update == 'true'
        run: |
          gh pr review --approve "${{ github.event.pull_request.number }}"
          echo "‚úÖ Auto-approved safe dependency update"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

      - name: Comment on major updates
        if: steps.check-update.outputs.safe_update == 'false'
        run: |
          gh pr comment "${{ github.event.pull_request.number }}" --body "üö® **Mise √† jour majeure d√©tect√©e** - R√©vision manuelle requise avant merge"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job pour fermer automatiquement l'issue quand la PR est merg√©e
  close-dependabot-issue:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.actor == 'dependabot[bot]'
    
    steps:
      - name: Close related Dependabot issue
        run: |
          PACKAGE_NAME=$(echo "${{ github.event.pull_request.title }}" | grep -oP 'bump \K[^\s]+')
          
          # Chercher l'issue correspondante et la fermer
          ISSUE_NUMBER=$(gh issue list --label "dependabot" --state open --search "$PACKAGE_NAME" --json number --jq '.[0].number')
          
          if [ ! -z "$ISSUE_NUMBER" ] && [ "$ISSUE_NUMBER" != "null" ]; then
            gh issue close $ISSUE_NUMBER --comment "‚úÖ Mise √† jour appliqu√©e - PR #${{ github.event.pull_request.number }} merg√©e avec succ√®s"
            echo "‚úÖ Issue #$ISSUE_NUMBER ferm√©e automatiquement"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
