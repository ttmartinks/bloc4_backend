name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  branch-name-check:
    runs-on: ubuntu-latest
    # Ignorer le check pour Dependabot
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Check branch name
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          echo "üîç V√©rification de la branche: $BRANCH_NAME"
          
          if [[ "$BRANCH_NAME" =~ ^(feature_|fix_)[a-zA-Z0-9_\-]+$ ]]; then
            echo "‚úÖ Nom de branche valide: $BRANCH_NAME"
          else
            echo "‚ùå Le nom de la branche doit commencer par 'feature_' ou 'fix_'"
            echo "üìù Format attendu: feature_nom_de_la_fonctionnalite ou fix_nom_du_bug"
            echo "üîó Branche actuelle: $BRANCH_NAME"
            exit 1
          fi

  db-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Test database connection
        run: npm run test -- userQueries.test.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  test:
    runs-on: ubuntu-latest
    needs: [db-check]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
